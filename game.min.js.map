{"version":3,"sources":["system/util.js","system/Emitter.js","system/DualPool.js","states/Title.js","states/Board.js","states/Adventure.js","states/AabbTHREEState.js","entities/Box.js","components/XboxGamepad.js","components/Timer.js","components/THREECube.js","components/StackFSM.js","components/Health.js","components/GamepadController.js","components/AABB3.js","global.js","game.js"],"names":["mh","util","PI","Math","TAU","DEG_TO_RAD","RAD_TO_DEG","clamp","val","min","max","sign","abs","random","arguments","length","randomInt","floor","normalize","v","getShortRotation","angle","this","generateID","toString","slice","Date","now","isPlainObject","obj","nodeType","window","constructor","Object","prototype","hasOwnProperty","call","err","merge","target","src","self","array","Array","isArray","dst","concat","forEach","e","i","indexOf","push","keys","key","overwrite","p","nwf","system","Performance","elapsedTime","performance","empty","node","lastChild","removeChild","radixSort","arr","idxBegin","idxEnd","bit","idx","idxOnes","mask","tmp","Emitter","entity","settings","Base","width","height","container","kai","stage","blend","emitType","EmitType","Point","emitDuration","emitAngle","emitAngleVar","emitSpeed","emitSpeedVar","emitRate","particleDuration","particleDurationVar","particleScaleInit","particleScaleVar","particleAlphaInit","particleAlphaAccel","particleAlphaAccelDelay","particleRotationAccel","particleRotationAccelVar","particleRadialAccel","particleRadialAccelVar","particleTangentialAccel","particleTangentialAccelVar","particleGravity","x","y","duration","position","Vec2","uri","Error","uuid","active","_force","_vec","_emitTimer","_pool","DualPool","Particle","_emissionSum","accessor","className","priority","activate","addChild","visible","elapsed","disable","freeAll","update","o","l","busy","emit","first","next","alpha","recycle","fadeDelay","set","vx","vy","copy","multiplyScalar","radialAccel","perp","tangentialAccel","rotation","rotationAccel","dispose","removeChildren","texture","destroy","forces","amt","a","ii","Type","get","scale","cos","sin","Rect","_width","_height","Circle","CircleUniform","sqrt","Ring","parent","addChildAt","anchor","define","classConstructor","instanceSettings","initSize","_Class","_freeList","LinkedList","_busyList","_settings","pool","size","add","pop","has","remove","create","g","require","Box","grid","vg","SqrGrid","cellSize","generate","board","Board","gen","GeneratedTileManager","makeTiles","view","group","focusOn","THREE","Vector3","render","Kai","World","AabbTHREEState","objects","player","renderer","boxSize","scene","raycaster","camera","projector","plane","intersector","normalMatrix","tmpVec","voxelPosition","rollOverMesh","cubeGeo","cubeMaterial","mouse2D","theta","preload","depth","rebuildCanvas","canvas","document","getElementsByTagName","PerspectiveCamera","innerWidth","innerHeight","Scene","rollOverGeo","CubeGeometry","rollOverMaterial","MeshBasicMaterial","color","opacity","transparent","Mesh","Projector","Matrix3","geometry","Geometry","vertices","material","LineBasicMaterial","line","Line","type","LinePieces","PlaneGeometry","ambientLight","AmbientLight","directionalLight","DirectionalLight","WebGLRenderer","antialias","setClearColor","setSize","renderHook","draw","bind","mouse","onDown","mouseDown","keyDown","reset","W","velocity","z","S","A","D","SPACEBAR","keyUp","intersects","intersectObjects","children","getRealIntersector","ctrl","object","setVoxelPosition","voxel","shift","pickingRay","clone","lookAt","getNormalMatrix","matrixWorld","face","normal","applyMatrix3","addVectors","point","body","createElement","insertBefore","getElementById","total","Box3","pos","dynamic","sharedAttr","addComponent","Components","THREE_CUBE","AABB3","removeComponent","XboxGamepad","id","Signal","onUp","leftAxis","rightAxis","leftTrigger","rightTrigger","axisTolerance","controller","buttons","_numButtons","_mozAxisOffset","_prevButtons","register","ctrlr","setPad","navigator","webkitGetGamepads","unregister","btn","leftX","axes","leftY","rightX","rightY","value","dispatch","isDown","inputBlocked","XBOX","B","X","Y","LB","RB","LT","RT","SELECT","START","LSTICK","RSTICK","UP","DOWN","LEFT","RIGHT","Timer","repeat","immediateDispatch","interval","onInterval","_timer","_numTicks","_currentRepeat","THREECube","textureUrl","emissive","_display","MeshPhongMaterial","shading","FlatShading","map","ImageUtils","loadTexture","expect","setFromVector3","StackFSM","state","stack","stateChanged","_activeContext","_activeFunction","_prevFunction","post","pushState","ctx","popState","name","Health","overage","alive","onDeath","onDamage","onHeal","onFull","onActivate","_meter","change","amount","drain","deathSignal","GamepadController","controllers","onConnect","onDisconnect","activeControllers","_controllerStatus","addEventListener","_onConnect","_onDisconnect","_scan","_addPad","gamepad","index","_removePad","evt","gamepads","foo","config","broadphase","nextLevel","engine","Engine","element","cameraPosition","registerComponents","firstState","start"],"mappings":"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","file":"game.min.js","sourcesContent":["/*\n\tJavaScript utility functions\n\n\t@author Corey Birnbaum http://coldconstructs.com/ @vonWolfehaus\n*/\nmh.util = {\n\tPI: Math.PI,\n\tTAU: Math.PI * 2,\n\tDEG_TO_RAD: 0.0174532925,\n\tRAD_TO_DEG: 57.2957795,\n\n\tclamp: function(val, min, max) {\n\t\treturn Math.max(min, Math.min(max, val));\n\t},\n\n\tsign: function(val) {\n\t\treturn val && val / Math.abs(val);\n\t},\n\n\t/**\n\t * If one value is passed, it will return something from -val to val.\n\t * Else it returns a value between the range specified by min, max.\n\t */\n\trandom: function(min, max) {\n\t\tif (arguments.length === 1) {\n\t\t\treturn (Math.random() * min) - (min * 0.5);\n\t\t}\n\t\treturn Math.random() * (max - min) + min;\n\t},\n\n\t// from min to (and including) max\n\trandomInt: function(min, max) {\n\t\tif (arguments.length === 1) {\n\t\t\treturn Math.floor((Math.random() * min) - (min * 0.5));\n\t\t}\n\t\treturn Math.floor(Math.random() * (max - min + 1) + min);\n\t},\n\n\tnormalize: function(v, min, max) {\n\t\treturn (v - min) / (max - min);\n\t},\n\n\tgetShortRotation: function(angle) {\n\t\tangle %= this.TAU;\n\t\tif (angle > this.PI) {\n\t\t\tangle -= this.TAU;\n\t\t}\n\t\telse if (angle < -this.PI) {\n\t\t\tangle += this.TAU;\n\t\t}\n\t\treturn angle;\n\t},\n\n\tgenerateID: function() {\n\t\treturn Math.random().toString(36).slice(2) + Date.now();\n\t},\n\n\tisPlainObject: function(obj) {\n\t\tif (typeof(obj) !== 'object' || obj.nodeType || obj === obj.window) {\n\t\t\treturn false;\n\t\t}\n\t\ttry {\n\t\t\tif (obj.constructor && !Object.prototype.hasOwnProperty.call(obj.constructor.prototype, 'isPrototypeOf')) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tcatch (err) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\t// https://github.com/KyleAMathews/deepmerge/blob/master/index.js\n\tmerge: function(target, src) {\n\t\tvar self = this, array = Array.isArray(src);\n\t\tvar dst = array && [] || {};\n\t\tif (array) {\n\t\t\ttarget = target || [];\n\t\t\tdst = dst.concat(target);\n\t\t\tsrc.forEach(function(e, i) {\n\t\t\t\tif (typeof dst[i] === 'undefined') {\n\t\t\t\t\tdst[i] = e;\n\t\t\t\t}\n\t\t\t\telse if (self.isPlainObject(e)) {\n\t\t\t\t\tdst[i] = self.merge(target[i], e);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (target.indexOf(e) === -1) {\n\t\t\t\t\t\tdst.push(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn dst;\n\t\t}\n\t\tif (target && self.isPlainObject(target)) {\n\t\t\tObject.keys(target).forEach(function (key) {\n\t\t\t\tdst[key] = target[key];\n\t\t\t});\n\t\t}\n\t\tObject.keys(src).forEach(function (key) {\n\t\t\tif (!src[key] || !self.isPlainObject(src[key])) {\n\t\t\t\tdst[key] = src[key];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!target[key]) {\n\t\t\t\t\tdst[key] = src[key];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdst[key] = self.merge(target[key], src[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn dst;\n\t},\n\n\toverwrite: function(target, src) {\n\t\tfor (var p in src) {\n\t\t\tif (target.hasOwnProperty(p) && src.hasOwnProperty(p)) {\n\t\t\t\ttarget[p] = src[p];\n\t\t\t}\n\t\t}\n\t},\n\n\tnow: function() {\n\t\treturn window.nwf ? window.nwf.system.Performance.elapsedTime : window.performance.now();\n\t},\n\n\tempty: function(node) {\n\t\twhile (node.lastChild) {\n\t\t\tnode.removeChild(node.lastChild);\n\t\t}\n\t},\n\n\t/*\n\t\t@source: http://jsperf.com/radix-sort\n\t */\n\tradixSort: function(arr, idxBegin, idxEnd, bit) {\n\t\tidxBegin = idxBegin || 0;\n\t\tidxEnd = idxEnd || arr.length;\n\t\tbit = bit || 31;\n\t\tif (idxBegin >= (idxEnd - 1) || bit < 0) {\n\t\t\treturn;\n\t\t}\n\t\tvar idx = idxBegin;\n\t\tvar idxOnes = idxEnd;\n\t\tvar mask = 0x1 << bit;\n\t\twhile (idx < idxOnes) {\n\t\t\tif (arr[idx] & mask) {\n\t\t\t\t--idxOnes;\n\t\t\t\tvar tmp = arr[idx];\n\t\t\t\tarr[idx] = arr[idxOnes];\n\t\t\t\tarr[idxOnes] = tmp;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t++idx;\n\t\t\t}\n\t\t}\n\t\tthis.radixSort(arr, idxBegin, idxOnes, bit-1);\n\t\tthis.radixSort(arr, idxOnes, idxEnd, bit-1);\n\t}\n};\n","/*\n\tA basic particle emitter: point and area emission, and a few dynamic force types.\n\tDoes not require an entity.\n\tBased on https://github.com/city41/particle.js\n\t@author Corey Birnbaum http://coldconstructs.com/ @vonWolfehaus\n*/\nmh.Emitter = function(entity, settings) {\n\tsettings = settings || {};\n\tmh.Base.call(this);\n\n\t// adjustable properties available to override in settings\n\tthis.width = 10; // setting a nice default\n\tthis.height = 10;\n\tthis.container = mh.mh.kai.stage; // puts particles on top of everything\n\tthis.blend = false;\n\n\tthis.emitType = mh.Emitter.EmitType.Point;\n\tthis.emitDuration = -1; // how long to emit for, in seconds, or -1 for forever\n\tthis.emitAngle = 0; // angle at which particles are emitted only in radians\n\tthis.emitAngleVar = mh.util.TAU; // \"spread\" of emission based around emitAngle in radians; default is full circle\n\tthis.emitSpeed = 10;\n\tthis.emitSpeedVar = 0;\n\tthis.emitRate = 30; // how many per second\n\n\tthis.particleDuration = 1; // in seconds\n\tthis.particleDurationVar = 0;\n\tthis.particleScaleInit = 1; // 0 - 1\n\tthis.particleScaleVar = 0; // 0 - 1\n\t// this.particleScaleAccel = 1;\n\n\tthis.particleAlphaInit = 1; // 0 - 1\n\tthis.particleAlphaAccel = -2; // how fast to fade in (positive) or out (negative)\n\tthis.particleAlphaAccelDelay = 0.5; // seconds to wait before applying alpha accel\n\n\tthis.particleRotationAccel = 0; // particle sprite spin speed\n\tthis.particleRotationAccelVar = 0.2; // randomize starting particle sprite rotation speed\n\n\tthis.particleRadialAccel = 0;\n\tthis.particleRadialAccelVar = 0;\n\n\tthis.particleTangentialAccel = 0;\n\tthis.particleTangentialAccelVar = 0;\n\n\tthis.particleGravity = null;\n\n\tmh.util.overwrite(this, settings);\n\n\tthis.particleGravity = this.particleGravity || {x: 0, y: 0};\n\n\t// public\n\tthis.entity = entity || null; // avoiding undefined\n\tthis.duration = 0;\n\tthis.position = new mh.Vec2(); // get rid of Pixi's Point in favor of Vec2\n\tif (!this.uri) {\n\t\tthrow new Error('[Emitter] You must pass in an image uri through the settings parameter');\n\t}\n\t// this.texture = PIXI.Texture.fromImage(settings.uri);\n\t// this.texture.frame = new PIXI.Rectangle(this.offsetX, this.offsetY, this.width, this.height);\n\n\t// base\n\tthis.uuid = mh.util.generateID();\n\tthis.active = false;\n\n\t// private\n\tthis._force = new mh.Vec2(); // aggregate force applied to each particle on update(), resets on each iteration, do not use\n\tthis._vec = new mh.Vec2(); // scratch Vec2 for update(), do not use\n\tthis._emitTimer = 0;\n\tthis._pool = new mh.DualPool(mh.Particle, this, 15);\n\tthis._emissionSum = 0;\n};\n\n// inherit from PIXI SpriteBatch\n// mh.Emitter.prototype = Object.create(PIXI.SpriteBatch.prototype);\nmh.Emitter.prototype.constructor = mh.Emitter;\n\n// required statics for component system\nmh.Emitter.accessor = 'emitter'; // property name as it sits on an entity\nmh.Emitter.className = 'EMITTER'; // name of component on the definition list object\nmh.Emitter.priority = 50; // general position in the engine's component array; updated in ascending order\n\n\n/*-------------------------------------------------------------------------------\n\t\t\t\t\t\t\t\t\tCOMPONENT INTERFACE\n-------------------------------------------------------------------------------*/\n\nmh.Emitter.prototype.activate = function() {\n\tthis.active = true;\n\tthis.container.addChild(this);\n\tthis.visible = true;\n\tthis.duration = 0;\n\tthis._emissionSum = this.emitRate * mh.kai.elapsed;\n};\n\nmh.Emitter.prototype.disable = function() {\n\tthis.active = false;\n\tthis.container.removeChild(this);\n\tthis._pool.freeAll();\n};\n\nmh.Emitter.prototype.update = function() {\n\tvar i, p, o, l = this._pool.busy; // only loop through active particles\n\n\tthis.duration += mh.kai.elapsed;\n\tif (this.emitDuration === -1 || this.duration < this.emitDuration) {\n\t\t// we can still emit\n\t\tthis._emissionSum += this.emitRate * mh.kai.elapsed;\n\t\tif (this._emissionSum >= 1) {\n\t\t\ti = Math.floor(this._emissionSum);\n\t\t\tthis.emit(i);\n\t\t\tthis._emissionSum -= i;\n\t\t}\n\t}\n\telse {\n\t\t// we are done emitting but we need to wait until all particles finish\n\t\tif (this._pool.busy.length === 0) {\n\t\t\tthis.disable();\n\t\t\treturn;\n\t\t}\n\t}\n\n\to = l.first;\n\twhile (o) {\n\t\tp = o.obj; // update our active particles\n\t\to = o.next;\n\n\t\tp.duration += mh.kai.elapsed;\n\t\tif (p.alpha < 0 || p.duration >= this.particleDuration) {\n\t\t\tp.visible = false; // no need to disable, it gets taken out of the busy list when recycled\n\t\t\tthis._pool.recycle(p);\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (p.fadeDelay <= 0) {\n\t\t\tp.alpha += this.particleAlphaAccel * mh.kai.elapsed;\n\t\t}\n\t\telse {\n\t\t\tp.fadeDelay -= mh.kai.elapsed;\n\t\t}\n\n\t\tthis._vec.set(p.vx, p.vy); // normalized velocity\n\t\tthis._force.copy(this._vec); // velocity\n\n\t\tthis._force.multiplyScalar(p.radialAccel);\n\n\t\tthis._vec.normalize();\n\t\tthis._vec.perp();\n\t\tthis._vec.multiplyScalar(p.tangentialAccel);\n\t\t// sum acceleration forces and integrate\n\t\tp.vx += (this._force.x + this._vec.x + this.particleGravity.x) * mh.kai.elapsed;\n\t\tp.vy += (this._force.y + this._vec.y + this.particleGravity.y) * mh.kai.elapsed;\n\t\tp.position.x += p.vx * mh.kai.elapsed;\n\t\tp.position.y += p.vy * mh.kai.elapsed;\n\t\tp.rotation += p.rotationAccel * mh.kai.elapsed;\n\t}\n};\n\nmh.Emitter.prototype.dispose = function() {\n\tthis.removeChildren();\n\tthis.texture.destroy();\n\tthis._pool.dispose();\n\tthis._pool = null;\n\tthis.forces = null;\n};\n\n/*-------------------------------------------------------------------------------\n\t\t\t\t\t\t\t\t\tPUBLIC\n-------------------------------------------------------------------------------*/\n\nmh.Emitter.prototype.emit = function(amt) {\n\tvar Type = mh.Emitter.EmitType;\n\tvar a, i, ii, p;\n\t// positions are relative to emitter (Pixi handles child coordinates)\n\tfor (i = 0; i < amt; i++) {\n\t\tp = this._pool.get();\n\t\tp.activate();\n\t\tp.duration = mh.util.random(this.particleDurationVar);\n\t\tp.rotation = mh.util.random(this.particleRotationAccelVar * mh.util.TAU);\n\t\tii = this.particleScaleInit + mh.util.random(this.particleScaleVar);\n\t\tp.scale.set(ii, ii);\n\t\tp.alpha = this.particleAlphaInit;\n\t\tp.fadeDelay = this.particleAlphaAccelDelay;\n\t\t// p.blendMode = this.blend ? PIXI.blendModes.ADD : PIXI.blendModes.NORMAL;\n\t\t// velocity\n\t\ta = this.emitAngle + mh.util.random(this.emitAngleVar);\n\t\tii = this.emitSpeed + mh.util.random(this.emitSpeedVar);\n\t\tp.vx = Math.cos(a) * ii;\n\t\tp.vy = -Math.sin(a) * ii;\n\t\t// forces\n\t\tp.radialAccel = this.particleRadialAccel + mh.util.random(this.particleRadialAccelVar);\n\t\tp.tangentialAccel = this.particleTangentialAccel + mh.util.random(this.particleTangentialAccelVar);\n\t\tp.rotationAccel = this.particleRotationAccel + mh.util.random(this.particleRotationAccelVar);\n\t\t// position\n\t\tswitch (this.emitType) {\n\t\t\tcase Type.Rect:\n\t\t\t\tp.position.x = mh.util.randomInt(this._width);\n\t\t\t\tp.position.y = mh.util.randomInt(this._height);\n\t\t\t\tbreak;\n\t\t\tcase Type.Circle:\n\t\t\t\ta = Math.random() * mh.util.TAU;\n\t\t\t\tii = Math.random();\n\t\t\t\tp.position.x = ii * this._width * Math.cos(a);\n\t\t\t\tp.position.y = ii * this._height * Math.sin(a);\n\t\t\t\tbreak;\n\t\t\tcase Type.CircleUniform:\n\t\t\t\ta = Math.random() * mh.util.TAU;\n\t\t\t\tii = Math.sqrt(Math.random());\n\t\t\t\tp.position.x = ii * this._width * Math.cos(a);\n\t\t\t\tp.position.y = ii * this._height * Math.sin(a);\n\t\t\t\tbreak;\n\t\t\tcase Type.Ring:\n\t\t\t\ta = mh.util.random(mh.util.TAU);\n\t\t\t\tp.position.x = Math.cos(a) * this._width;\n\t\t\t\tp.position.y = Math.sin(a) * this._height;\n\t\t\t\tbreak;\n\t\t\tdefault: // Point\n\t\t\t\tp.position.x = 0;\n\t\t\t\tp.position.y = 0;\n\t\t\t\tbreak;\n\t\t}\n\t}\n};\n\n/*-------------------------------------------------------------------------------\n\t\t\t\t\t\t\t\t\tSTATIC\n-------------------------------------------------------------------------------*/\n\nmh.Emitter.EmitType = {\n\tPoint: 0,\n\tRect: 2,\n\tCircle: 4,\n\tCircleUniform: 5,\n\tRing: 6\n};\n\n/*-------------------------------------------------------------------------------\n\t\t\t\t\t\t\t\t\tPARTICLE\n-------------------------------------------------------------------------------*/\n\n/*\n\tThe Emitter will instantiate these as necessary, so you only need to mess with the Emitter and it will efficiently apply it to its children.\n*/\nmh.Particle = function(parent) {\n\t// PIXI.Sprite.call(this, parent.texture);\n\tthis.uuid = mh.util.generateID();\n\n\tparent.addChildAt(this, 0);\n\tthis.anchor.set(0.5, 0.5);\n\t// TODO: frame either the whole sprite or if its width is greater than its height, choose random frame\n\n\tthis.active = false;\n\tthis.visible = false;\n\tthis.duration = 0;\n\tthis.fadeDelay = 0;\n\tthis.vx = 0;\n\tthis.vy = 0;\n\tthis.radialAccel = 0;\n\tthis.tangentialAccel = 0;\n\tthis.rotationAccel = 0;\n};\n\n// inherit from PIXI Sprite\n// mh.Particle.prototype = Object.create(PIXI.Sprite.prototype);\nmh.Particle.prototype.constructor = mh.Particle;\n\nmh.Particle.prototype.activate = function() {\n\t// many of these are overwritten by the emitter when spawned\n\tthis.active = true;\n\tthis.visible = true;\n\tthis.alpha = 1;\n\tthis.duration = 0;\n\tthis.rotation = 0;\n\tthis.vx = 0;\n\tthis.vy = 0;\n\tthis.radialAccel = 0;\n\tthis.tangentialAccel = 0;\n\tthis.rotationAccel = 0;\n};\n\nmh.Particle.prototype.disable = function() {\n\tthis.active = false;\n\tthis.visible = false;\n};\n","define('DualPool', function() {\n\nvar DualPool = function(classConstructor, instanceSettings, initSize) {\n\tthis._Class = classConstructor;\n\tthis._freeList = new mh.LinkedList();\n\tthis._busyList = new mh.LinkedList();\n\tthis._settings = instanceSettings || {};\n\tthis._settings.pool = this;\n\n\tthis.size = initSize;\n\n\tfor (var i = 0; i < this.size; i++) {\n\t\tthis._freeList.add(new this._Class(this._settings));\n\t}\n};\n\nDualPool.prototype = {\n\tconstructor: DualPool,\n\n\tget: function() {\n\t\tvar obj;\n\t\tif (this._freeList.length) {\n\t\t\tobj = this._freeList.pop();\n\t\t\tthis._busyList.add(obj);\n\t\t\treturn obj;\n\t\t}\n\n\t\t// grow\n\t\tobj = new this._Class(this._settings);\n\t\tthis._busyList.add(obj);\n\t\tthis.size++;\n\t\t// console.log('[DualPool.get] Free: '+this._freeList.length+'; Busy: '+this._busyList.length);\n\n\t\treturn obj;\n\t},\n\n\trecycle: function(obj) {\n\t\tif (this._busyList.has(obj)) {\n\t\t\tthis._busyList.remove(obj);\n\t\t\tthis._freeList.add(obj);\n\n\t\t} /*else {\n\t\t\t// already in free, or not in either list\n\t\t\tconsole.log('[DualPool.recycle] Object ignored');\n\t\t}*/\n\t\t// console.log('[DualPool.recycle] Free: '+this._freeList.length+'; Busy: '+this._busyList.length);\n\t},\n\n\tfreeAll: function() {\n\t\tvar obj, node = this._busyList.first;\n\t\twhile (node) {\n\t\t\tobj = node.obj;\n\t\t\tthis._busyList.remove(obj);\n\t\t\tthis._freeList.add(obj);\n\t\t\tnode = node.next;\n\t\t}\n\t},\n\n\tdispose: function() {\n\t\tthis._freeList.dispose();\n\t\tthis._busyList.dispose();\n\t\tthis._freeList = null;\n\t\tthis._busyList = null;\n\t\tthis._Class = null;\n\t\tthis._settings = null;\n\t},\n\n\ttoString: function() {\n\t\treturn '[DualPool size: '+this.size+', free: '+this._freeList.length+', busy: '+this._busyList.length+']';\n\t}\n};\n\nreturn DualPool;\n\n});\n","define('title', {\n\tcreate: function () {\n\n\t},\n\n\tupdate: function () {\n\n\t},\n\n\tdispose: function() {\n\n\t}\n});\n","define('Board', {\n\tcreate: function () {\n\n\t},\n\n\tupdate: function () {\n\n\t},\n\n\tdispose: function() {\n\n\t}\n});\n","define('Adventure', {\n\tcreate: function () {\n\t\tvar g = require('global');\n\t\tvar Box = require('Box');\n\n\t\tvar grid = new vg.SqrGrid({\n\t\t\tcellSize: 10 // size of individual cells\n\t\t});\n\n\t\tgrid.generate({\n\t\t\tsize: 10 // size of the board\n\t\t});\n\n\t\tvar board = new vg.Board(grid);\n\n\t\t// this will generate extruded square tiles\n\t\tvar gen = new vg.GeneratedTileManager(board);\n\t\tgen.makeTiles(50); // height of the tiles\n\n\t\tmh.kai.view.add(board.group);\n\t\tmh.kai.view.focusOn(board.group);\n\n\t\tvar b = new Box(new THREE.Vector3());\n\n\t\tg.board = board;\n\t\tg.grid = grid;\n\t},\n\n\tupdate: function () {\n\t\tmh.kai.view.render();\n\t},\n\n\tdispose: function() {\n\n\t}\n});\n","define(function(require) {\n\n// imports\nrequire('src/lib/three.min.js');\n\nvar Kai = require('core/Kai');\n\n// var Collision = require('physics/Physics3');\n\nvar World = require('entities/World');\nvar Box = require('entities/Box3');\n\nvar AabbTHREEState = function() {\n\tthis.objects = [];\n\tthis.player = null;\n\tthis.renderer = null;\n\t\n\tthis.boxSize = 50;\n\t\n\tthis.scene = null;\n\tthis.raycaster = null;\n\tthis.camera = null;\n\tthis.projector = null;\n\t\n\tthis.plane = null;\n\tthis.intersector = null;\n\tthis.normalMatrix = null;\n\tthis.tmpVec = null;\n\tthis.voxelPosition = null;\n\tthis.rollOverMesh = null;\n\tthis.cubeGeo = null;\n\tthis.cubeMaterial = null;\n\t\n\tthis.mouse2D = null;\n\tthis.theta = 0;\n};\n\nAabbTHREEState.prototype = {\n\t\n\tpreload: function () {\n\t\t// Kai.load.image('box-texture', 'img/square-outline-textured.png');\n\t},\n\n\tcreate: function () {\n\t\tWorld.width = 100;\n\t\tWorld.height = 100;\n\t\tWorld.depth = 100;\n\t\t// console.log(World);\n\t\tthis.objects = [];\n\t\tthis.rebuildCanvas();\n\t\tvar canvas = document.getElementsByTagName('canvas')[0];\n\t\t\n\t\tthis.camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 1, 10000);\n\t\tthis.camera.position.y = 800;\n\t\t\n\t\t/*this.camera = new THREE.OrthographicCamera( window.innerWidth / - 2, window.innerWidth / 2, window.innerHeight / 2, window.innerHeight / - 2, 100, 3000 );\n\t\tthis.camera.position.x = 200;\n\t\tthis.camera.position.y = 900;\n\t\tthis.camera.position.z = 100;*/\n\n\t\tthis.scene = new THREE.Scene();\n\n\t\t// roll-over helpers\n\t\tvar rollOverGeo = new THREE.CubeGeometry( this.boxSize, this.boxSize, this.boxSize );\n\t\tvar rollOverMaterial = new THREE.MeshBasicMaterial({color: 0xff0000, opacity: 0.5, transparent: true});\n\t\tthis.rollOverMesh = new THREE.Mesh(rollOverGeo, rollOverMaterial);\n\t\tthis.scene.add(this.rollOverMesh);\n\t\t\n\t\t// picking\n\t\tthis.projector = new THREE.Projector();\n\t\t\n\t\tthis.voxelPosition = new THREE.Vector3();\n\t\tthis.tmpVec = new THREE.Vector3();\n\t\tthis.normalMatrix = new THREE.Matrix3();\n\n\t\t// grid\n\t\tvar size = this.boxSize * 10;\n\t\tvar geometry = new THREE.Geometry();\n\t\tfor (var i = -size; i <= size; i += this.boxSize) {\n\t\t\tgeometry.vertices.push(new THREE.Vector3(-size, 0, i));\n\t\t\tgeometry.vertices.push(new THREE.Vector3(size, 0, i));\n\n\t\t\tgeometry.vertices.push(new THREE.Vector3(i, 0, -size));\n\t\t\tgeometry.vertices.push(new THREE.Vector3(i, 0, size));\n\t\t}\n\n\t\tvar material = new THREE.LineBasicMaterial( { color: 0x000000, opacity: 0.2, transparent: true } );\n\t\tvar line = new THREE.Line( geometry, material );\n\t\tline.type = THREE.LinePieces;\n\t\tthis.scene.add( line );\n\n\t\tthis.plane = new THREE.Mesh( new THREE.PlaneGeometry( 1000, 1000 ), new THREE.MeshBasicMaterial() );\n\t\tthis.plane.rotation.x = -Math.PI / 2;\n\t\tthis.plane.visible = false;\n\t\tthis.scene.add(this.plane );\n\n\t\tthis.mouse2D = new THREE.Vector3(0, 10000, 0.5);\n\n\t\t// Lights\n\t\tvar ambientLight = new THREE.AmbientLight( 0x606060 );\n\t\tthis.scene.add( ambientLight );\n\n\t\tvar directionalLight = new THREE.DirectionalLight( 0xffffff );\n\t\tdirectionalLight.position.set( 1, 0.75, 0.5 ).normalize();\n\t\tthis.scene.add( directionalLight );\n\n\t\tthis.renderer = new THREE.WebGLRenderer({\n\t\t\tcanvas: canvas,\n\t\t\tantialias: true\n\t\t});\n\t\tthis.renderer.setClearColor( 0xf0f0f0 );\n\t\tthis.renderer.setSize( window.innerWidth, window.innerHeight );\n\t\t\n\t\t// Action\n\t\tKai.view = this.scene;\n\t\tKai.renderHook = this.draw.bind(this);\n\t\t\n\t\tKai.mouse.onDown.add(this.mouseDown, this);\n\t\tKai.keys.onDown.add(this.keyDown, this);\n\t\t// Kai.keys.onUp.add(this.keyUp, this);\n\t\t\n\t\tthis.player = new Box(new THREE.Vector3());\n\t\tthis.player.position.y = size;\n\t\tthis.player.reset();\n\t\tthis.objects.push(this.player);\n\t},\n\t\n\tkeyDown: function(key) {\n\t\tswitch (key) {\n\t\t\tcase Kai.keys.W:\n\t\t\t\tthis.player.velocity.z = 10;\n\t\t\t\tbreak;\n\t\t\tcase Kai.keys.S:\n\t\t\t\tthis.player.velocity.z = 10;\n\t\t\t\tbreak;\n\t\t\tcase Kai.keys.A:\n\t\t\t\tthis.player.velocity.x = 10;\n\t\t\t\tbreak;\n\t\t\tcase Kai.keys.D:\n\t\t\t\tthis.player.velocity.x = 10;\n\t\t\t\tbreak;\n\t\t\tcase Kai.keys.SPACEBAR:\n\t\t\t\tthis.player.velocity.y = -50;\n\t\t\t\tbreak;\n\t\t}\n\t},\n\t\n\tkeyUp: function(key, duration) {\n\t\tswitch (key) {\n\t\t\tcase Kai.keys.W:\n\t\t\t\tthis.player.velocity.z = 0;\n\t\t\t\tbreak;\n\t\t\tcase Kai.keys.S:\n\t\t\t\tthis.player.velocity.z = 0;\n\t\t\t\tbreak;\n\t\t\tcase Kai.keys.A:\n\t\t\t\tthis.player.velocity.x = 0;\n\t\t\t\tbreak;\n\t\t\tcase Kai.keys.D:\n\t\t\t\tthis.player.velocity.x = 0;\n\t\t\t\tbreak;\n\t\t}\n\t},\n\t\n\tmouseDown: function(position) {\n\t\tvar intersects = this.raycaster.intersectObjects(this.scene.children);\n\t\t\n\t\tif (intersects.length > 0) {\n\t\t\tthis.intersector = this.getRealIntersector(intersects);\n\t\t\t\n\t\t\t// delete cube\n\t\t\tif (Kai.keys.ctrl) {\n\t\t\t\tif (this.intersector.object != this.plane) {\n\t\t\t\t\tthis.scene.remove(this.intersector.object);\n\t\t\t\t}\n\t\t\t\n\t\t\t// create cube\n\t\t\t} else {\n\t\t\t\tthis.intersector = this.getRealIntersector(intersects);\n\t\t\t\tthis.setVoxelPosition(this.intersector);\n\t\t\t\t\n\t\t\t\tvar voxel = new Box(this.voxelPosition, this.boxSize);\n\t\t\t\tvoxel.reset();\n\t\t\t\tthis.objects.push(voxel);\n\t\t\t}\n\t\t}\n\t\t// console.log(this.scene);\n\t},\n\t\n\tupdate: function () {\n\t\tvar i, j, a, b, m;\n\t\t\n\t\tthis.mouse2D.x = (Kai.mouse.position.x / window.innerWidth) * 2 - 1;\n\t\tthis.mouse2D.y = -(Kai.mouse.position.y / window.innerHeight) * 2 + 1;\n\t\t\n\t\tif (Kai.keys.shift) {\n\t\t\tthis.theta += this.mouse2D.x * 1.5;\n\t\t}\n\n\t\tthis.raycaster = this.projector.pickingRay(this.mouse2D.clone(), this.camera);\n\n\t\tvar intersects = this.raycaster.intersectObjects(this.scene.children);\n\n\t\tif (intersects.length > 0) {\n\t\t\tthis.intersector = this.getRealIntersector(intersects);\n\t\t\t\n\t\t\tif (this.intersector) {\n\t\t\t\tthis.setVoxelPosition(this.intersector);\n\t\t\t\tthis.rollOverMesh.position = this.voxelPosition;\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.camera.position.x = 1400 * Math.sin(this.theta * 0.017453292); // deg to rad\n\t\tthis.camera.position.z = 1400 * Math.cos(this.theta * 0.017453292); // THREE.Math.degToRad() is wasteful!\n\n\t\tthis.camera.lookAt(this.scene.position);\n\t\t\n\t\t// brute force collision check\n\t\t/*for (i = 0; i < (this.total-1); ++i) {\n\t\t\ta = this.objects[i].body;\n\t\t\t\n\t\t\tfor (j = i + 1; j < this.total; ++j) {\n\t\t\t\tb = this.objects[j].body;\n\t\t\t\t\n\t\t\t\tm = Collision.separateAABBvsAABB(a, b);\n\t\t\t\tif (m) {\n\t\t\t\t\tCollision.resolve(a, b, m);\n\t\t\t\t}\n\t\t\t}\n\t\t}*/\n\t\t\n\t},\n\t\n\tdraw: function() {\n\t\tthis.renderer.render(this.scene, this.camera);\n\t},\n\t\n\tsetVoxelPosition: function(intersector) {\n\t\tthis.normalMatrix.getNormalMatrix(intersector.object.matrixWorld);\n\t\tthis.tmpVec.copy(intersector.face.normal);\n\t\tthis.tmpVec.applyMatrix3(this.normalMatrix).normalize();\n\t\tthis.voxelPosition.addVectors(intersector.point, this.tmpVec);\n\t\tthis.voxelPosition.x = Math.floor(this.voxelPosition.x / 50) * 50 + 25;\n\t\tthis.voxelPosition.y = Math.floor(this.voxelPosition.y / 50) * 50 + 25;\n\t\tthis.voxelPosition.z = Math.floor(this.voxelPosition.z / 50) * 50 + 25;\n\t},\n\t\n\tgetRealIntersector: function(intersects) {\n\t\tvar i, intersector;\n\t\tfor (i = 0; i < intersects.length; i++) {\n\t\t\tintersector = intersects[i];\n\t\t\tif (intersector.object != this.rollOverMesh) {\n\t\t\t\treturn intersector;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t},\n\t\n\trebuildCanvas: function() {\n\t\t// since we're coming from or going to a 2d context, we need to nuke the canvas\n\t\tvar canvas = document.getElementsByTagName('canvas')[0];\n\t\tdocument.body.removeChild(canvas);\n\t\tcanvas = document.createElement('canvas');\n\t\tdocument.body.insertBefore(canvas, document.getElementById('debug'));\n\t},\n\t\n\tdispose: function() {\n\t\tvar i, o;\n\t\tfor (i = 0; i < this.total; i++) {\n\t\t\to = this.objects[i];\n\t\t\to.dispose();\n\t\t}\n\t\tthis.objects.length = 0;\n\t\tKai.mouse.onDown.remove(this.mouseDown, this);\n\t\t\n\t\tKai.view = null;\n\t\tthis.scene = null;\n\t\tthis.raycaster = null;\n\t\tthis.camera = null;\n\t\tthis.projector = null;\n\t\t\n\t\tthis.plane = null;\n\t\tthis.intersector = null;\n\t\tthis.normalMatrix = null;\n\t\tthis.tmpVec = null;\n\t\tthis.voxelPosition = null;\n\t\tthis.rollOverMesh = null;\n\t\tthis.cubeGeo = null;\n\t\tthis.cubeMaterial = null;\n\t\t\n\t\tthis.mouse2D = null;\n\t\tthis.rebuildCanvas();\n\t}\n};\n\nreturn AabbTHREEState;\n\n});","define('Box', function() {\n\n// imports\n\n\n// constructor\nvar Box3 = function(pos, settings) {\n\tsettings = settings || {};\n\tmh.Base.call(this);\n\n\tvar g = require('global');\n\n\t// attributes\n\tthis.size = 50;\n\tthis.dynamic = true;\n\n\tvar sharedAttr = {\n\t\tsize: this.size,\n\t\tdynamic: this.dynamic\n\t};\n\n\tmh.util.merge(sharedAttr, settings);\n\n\t// base components\n\tthis.position = pos.clone();\n\tthis.velocity = new THREE.Vector3();\n\n\t// complex components\n\tmh.kai.addComponent(this, g.Components.THREE_CUBE, sharedAttr); // view\n\tmh.kai.addComponent(this, g.Components.AABB3, sharedAttr); // body\n\n};\n\nBox3.prototype = {\n\tconstructor: Box3,\n\n\t/*-------------------------------------------------------------------------------\n\t\t\t\t\t\t\t\t\tPUBLIC\n\t-------------------------------------------------------------------------------*/\n\n\tactivate: function() {\n\t\tthis.view.active = true;\n\t\tthis.body.active = true;\n\t},\n\n\tdispose: function() {\n\t\t// dispose components\n\t\tmh.kai.removeComponent(this, g.Components.THREE_CUBE);\n\t\tmh.kai.removeComponent(this, g.Components.AABB3);\n\n\t\t// null references\n\t\tthis.position = null;\n\t\tthis.velocity = null;\n\t}\n\n};\n\nreturn Box3;\n\n});","/*\n\tHandles specifics of Xbox controllers, used in conjunction with GamepadController.\n\tNot a component.\n\t@author Corey Birnbaum http://coldconstructs.com/ @vonWolfehaus\n*/\nmh.XboxGamepad = function(id) {\n\tmh.Base.call(this);\n\n\t// attributes\n\tthis.id = id;\n\tthis.onDown = new mh.Signal();\n\tthis.onUp = new mh.Signal();\n\n\t// NOTE: 'up' is y-, 'right' is x+, all values normalized\n\tthis.leftAxis = new mh.Vec2();\n\tthis.rightAxis = new mh.Vec2();\n\tthis.leftTrigger = 0;\n\tthis.rightTrigger = 0;\n\n\t// xbox 360 sticks drift a CONSIDERABLE amount\n\tthis.axisTolerance = 0.2;\n\n\tthis.controller = null;\n\tthis.buttons = null;\n\n\tthis._numButtons = 0;\n\tthis._mozAxisOffset = 0;\n\tthis._prevButtons = [];\n};\n\nmh.XboxGamepad.prototype = {\n\tconstructor: mh.XboxGamepad,\n\n\tregister: function(ctrlr) {\n\t\tthis.setPad(ctrlr);\n\t\tthis._numButtons = this.buttons.length;\n\n\t\tif (navigator.webkitGetGamepads) {\n\t\t\tthis._mozAxisOffset = 0;\n\t\t}\n\t\telse {\n\t\t\tthis._mozAxisOffset = 1;\n\t\t}\n\n\t\tthis.activate();\n\t\t// console.log('[XboxGamepad.register] CONNECTED '+this.id);\n\t\t// console.log(this.buttons);\n\t},\n\n\tsetPad: function(ctrlr) {\n\t\tthis.controller = ctrlr;\n\t\tthis.buttons = ctrlr.buttons;\n\t},\n\n\tunregister: function() {\n\t\tthis.controller = null;\n\t\tthis.buttons = null;\n\t\tthis._numButtons = 0;\n\t\t// console.log('[XboxGamepad.unregister] DISCONNECTED '+this.id);\n\t},\n\n\tupdate: function() {\n\t\tvar i, btn;\n\t\tvar leftX = this.controller.axes[0];\n\t\tvar leftY = this.controller.axes[1];\n\t\tvar rightX = this.controller.axes[2+this._mozAxisOffset];\n\t\tvar rightY = this.controller.axes[3+this._mozAxisOffset];\n\n\t\tif (leftX < this.axisTolerance && leftX > -this.axisTolerance) { leftX = 0; }\n\t\tif (leftY < this.axisTolerance && leftY > -this.axisTolerance) { leftY = 0; }\n\t\tif (rightX < this.axisTolerance && rightX > -this.axisTolerance) { rightX = 0; }\n\t\tif (rightY < this.axisTolerance && rightY > -this.axisTolerance) { rightY = 0; }\n\n\t\tthis.leftAxis.x = leftX;\n\t\tthis.leftAxis.y = leftY;\n\t\tthis.rightAxis.x = rightX;\n\t\tthis.rightAxis.y = rightY;\n\n\t\tfor (i = 0; i < this._numButtons; i++) {\n\t\t\tbtn = this.buttons[i];\n\n\t\t\tif (i === 6) {\n\t\t\t\tthis.leftTrigger = btn.value || btn;\n\t\t\t}\n\t\t\telse if (i === 7) {\n\t\t\t\tthis.rightTrigger = btn.value || btn;\n\t\t\t}\n\n\t\t\tif (btn && !this._prevButtons[i]) {\n\t\t\t\tthis.onDown.dispatch(i, btn);\n\t\t\t}\n\t\t\telse if (!btn && this._prevButtons[i]) {\n\t\t\t\tthis.onUp.dispatch(i, btn);\n\t\t\t}\n\n\t\t\tthis._prevButtons[i] = btn;\n\n\t\t}\n\t},\n\n\tisDown: function(btn) {\n\t\tif (mh.kai.inputBlocked || !this.active) {\n\t\t\treturn false;\n\t\t}\n\t\treturn !!this.buttons[btn];\n\t},\n\n\tactivate: function() {\n\t\tthis.active = true;\n\t\tthis.leftAxis.x = 0;\n\t\tthis.leftAxis.y = 0;\n\t\tthis.rightAxis.x = 0;\n\t\tthis.rightAxis.y = 0;\n\t\tthis.leftTrigger = 0;\n\t\tthis.rightTrigger = 0;\n\t\tfor (var i = 0; i < this._numButtons; i++) {\n\t\t\tthis.buttons[i] = 0;\n\t\t\tthis._prevButtons[i] = 0;\n\t\t}\n\t},\n\n\tdisable: function() {\n\t\tthis.active = false;\n\t},\n\n\tdispose: function() {\n\t\t// remove signal callbacks\n\t\tthis.onDown.dispose();\n\t\tthis.onUp.dispose();\n\n\t\t// null references\n\t\tthis.onDown = null;\n\t\tthis.onUp = null;\n\t}\n};\n\nmh.XBOX = {\n\tA: 0,\n\tB: 1,\n\tX: 2,\n\tY: 3,\n\tLB: 4,\n\tRB: 5,\n\tLT: 6,\n\tRT: 7,\n\tSELECT: 8,\n\tSTART: 9,\n\tLSTICK: 10,\n\tRSTICK: 11,\n\tUP: 12,\n\tDOWN: 13,\n\tLEFT: 14,\n\tRIGHT: 15\n};\n","/*\n\tHandy component that dispatches a signal at a given interval, with other configuration options available.\n\t@author Corey Birnbaum http://coldconstructs.com/ @vonWolfehaus\n*/\nmh.Timer = function(entity, settings) {\n\tsettings = settings || {};\n\tmh.Base.call(this);\n\n\tthis.repeat = -1; // set to -1 to repeat forever\n\tthis.immediateDispatch = false;\n\tthis.interval = 1000; // milliseconds\n\n\tmh.util.overwrite(this, settings);\n\n\tthis.onInterval = new mh.Signal();\n\n\t// private properties\n\tthis.entity = entity;\n\tthis._timer = 0;\n\tthis._numTicks = 0;\n\tthis._currentRepeat = this.repeat;\n\n\tthis.disable();\n};\n\n// required statics for component system\nmh.Timer.accessor = 'timer'; // property name as it sits on an entity\nmh.Timer.className = 'TIMER'; // name of component on the ComponenDef object\nmh.Timer.priority = 13; // general position in the engine's component array; updated according to ascending order\n\nmh.Timer.prototype = {\n\tconstructor: mh.Timer,\n\n\tactivate: function() {\n\t\tthis._timer = performance.now();\n\t\tthis.active = true;\n\t\tthis._currentRepeat = this.repeat;\n\t\tthis._numTicks = 0;\n\t\tif (this.immediateDispatch) {\n\t\t\tthis._numTicks++;\n\t\t\tthis.onInterval.dispatch(this._numTicks);\n\t\t}\n\t},\n\n\tdisable: function() {\n\t\tthis.active = false;\n\t},\n\n\treset: function() {\n\t\tthis._timer = performance.now();\n\t\tthis._numTicks = 0;\n\t\tif (this.active && this.immediateDispatch) {\n\t\t\tthis._numTicks++;\n\t\t\tthis.onInterval.dispatch(this._numTicks);\n\t\t}\n\t},\n\n\tupdate: function() {\n\t\tif (performance.now() - this._timer >= this.interval) {\n\t\t\tthis._numTicks++;\n\t\t\tthis.onInterval.dispatch(this._numTicks);\n\n\t\t\tif (this.repeat !== -1 && this._currentRepeat-- === 0) {\n\t\t\t\tthis.disable();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._timer = performance.now();\n\t\t}\n\t},\n\n\tdispose: function() {\n\t\t// remove signal callbacks\n\t\tthis.onInterval.dispose();\n\n\t\t// null references\n\t\tthis.onInterval = null;\n\t\tthis.entity = null;\n\t}\n};\n","/*\n\tAbstracts threejs cube creation so it integrates nicely into our entity-component system.\n\t@author Corey Birnbaum http://coldconstructs.com/ @vonWolfehaus\n*/\nmh.THREECube = function(entity, settings) {\n\tsettings = settings || {};\n\tmh.Base.call(this);\n\n\t// attributes\n\tthis.textureUrl = null;\n\tthis.container = mh.kai.view;\n\tthis.size = [5, 10, 5];\n\t// this.dynamic = false;\n\tthis.color = 0x156289;\n\tthis.emissive = 0x072534;\n\n\tmh.util.overwrite(this, settings);\n\n\t// private properties\n\tthis.entity = entity;\n\tthis._display = null;\n\n\t// NEVER do this in production! geo and materials should be cached!\n\t// But I'm on vacation and this is prototype code so, meh\n\tvar cubeGeo = new THREE.CubeGeometry(this.size[0], this.size[1], this.size[2]);\n\tvar cubeMaterial = new THREE.MeshPhongMaterial({\n\t\tcolor: 0x156289,\n\t\temissive: 0x072534,\n\t\tshading: THREE.FlatShading,\n\t\tmap: this.textureUrl ? THREE.ImageUtils.loadTexture(this.textureUrl) : null\n\t});\n\n\tthis._display = new THREE.Mesh(cubeGeo, cubeMaterial);\n\n\t/*if (!this.dynamic) {\n\t\tthis._display.matrixAutoUpdate = false;\n\t\tthis._display.position.copy(entity.position);\n\t\tthis._display.updateMatrix();\n\t}*/\n\n\t// prerequisite components\n\tthis.position = mh.kai.expect(entity, 'position', THREE.Vector3);\n\tthis.rotation = mh.kai.expect(entity, 'rotation', THREE.Vector3);\n};\n\n// required statics for component system\nmh.THREECube.accessor = 'view'; // property name as it sits on an entity\nmh.THREECube.className = 'VIEW_CUBE'; // name of component on the mh.Component object\nmh.THREECube.priority = 10; // general position in the engine's component array; highest updated first\n\nmh.THREECube.prototype = {\n\tconstructor: mh.THREECube,\n\n\tactivate: function() {\n\t\tthis.active = true;\n\t\tthis.container.add(this._display);\n\t},\n\n\tdisable: function() {\n\t\tthis.active = false;\n\t\tthis.container.remove(this._display);\n\t},\n\n\tupdate: function() {\n\t\tthis._display.position.copy(this.position);\n\t\tthis._display.rotation.setFromVector3(this.rotation);\n\t},\n\n\tdispose: function() {\n\t\tthis.disable();\n\n\t\t// null references\n\t\tthis.entity = null;\n\t\tthis.position = null;\n\t\tthis._display = null; // if you don't dispose() THREE Geometry, you'll get memory leaks FYI\n\t}\n};\n","/*\n\tStack-based Finite State Machine.\n\t@author Corey Birnbaum http://coldconstructs.com/ @vonWolfehaus\n*/\nmh.StackFSM = function(entity) {\n\tmh.Base.call(this);\n\n\t// public properties\n\tthis.state = null;\n\tthis.stack = [];\n\tthis.entity = entity;\n\n\tthis.stateChanged = new mh.Signal();\n\n\t// private\n\tthis._activeContext = null;\n\tthis._activeFunction = null;\n\tthis._prevFunction = null;\n};\n\n// required statics for component system\nmh.StackFSM.accessor = 'stack'; // property name as it sits on an entity\nmh.StackFSM.className = 'STACK_FSM'; // name of component on the component definition object\nmh.StackFSM.priority = 5; // general position in the engine's component array; the lower, the earlier it's updated\nmh.StackFSM.post = false; // whether or not this component will have a postUpdate() called on it\n\nmh.StackFSM.prototype = {\n\tconstructor: mh.StackFSM,\n\n\tactivate: function() {\n\t\tthis.active = true;\n\t},\n\n\tdisable: function() {\n\t\tthis.active = false;\n\t\tthis.reset();\n\t},\n\n\treset: function() {\n\t\tthis.stack.length = 0;\n\t\tthis._prevFunction = null;\n\t\tthis._activeFunction = null;\n\t},\n\n\tpushState: function(state, ctx) {\n\t\tif (state !== this._activeFunction) {\n\t\t\tthis.stack.push(state);\n\t\t\tthis._activeContext = ctx;\n\n\t\t\tif (!this.active) {\n\t\t\t\tthis.activate();\n\t\t\t}\n\t\t}\n\t},\n\n\tpopState: function() {\n\t\tthis.stack.pop();\n\t\tthis._activeFunction = this.stack.length ? this.stack[this.stack.length - 1] : null;\n\t\tif (!this._activeFunction) {\n\t\t\tthis.stateChanged.dispatch(this.state, 'null');\n\t\t\tthis._prevFunction = null;\n\t\t\tthis.disable();\n\t\t}\n\t},\n\n\tupdate: function() {\n\t\tthis._activeFunction = this.stack.length ? this.stack[this.stack.length - 1] : null;\n\t\tif (this._activeFunction) {\n\t\t\t// monitor changes so entity can react to unique situations\n\t\t\tif (this._activeFunction !== this._prevFunction) {\n\t\t\t\tthis.state = this._activeFunction.name;\n\t\t\t\tthis.stateChanged.dispatch(this._prevFunction ? this._prevFunction.name : 'null', this.state);\n\t\t\t\tthis._prevFunction = this._activeFunction;\n\t\t\t}\n\n\t\t\tthis._activeFunction.call(this._activeContext);\n\t\t}\n\t},\n\n\tdispose: function() {\n\t\tthis.entity = null;\n\t\tthis._activeFunction = null;\n\t\tthis._prevFunction = null;\n\t\tthis.stack = null;\n\t\tthis.stateChanged.dispose();\n\t\tthis.stateChanged = null;\n\t}\n};\n","mh.Health = function(entity, settings) {\n\tsettings = settings || {};\n\tmh.Base.call(this);\n\n\t// attributes\n\tthis.max = 100;\n\tthis.overage = 0;\n\tthis.alive = false;\n\tthis.active = false; // this component doesn't need to be updated\n\n\t// attribute override\n\tmh.util.overwrite(this, settings);\n\n\tthis.onDeath = new mh.Signal();\n\tthis.onDamage = new mh.Signal();\n\tthis.onHeal = new mh.Signal();\n\tthis.onFull = new mh.Signal();\n\tthis.onActivate = new mh.Signal();\n\n\t// private properties\n\tthis.entity = entity;\n\tthis._meter = 0;\n};\n\n// required statics for component system\nmh.Health.accessor = 'health'; // property name as it sits on an entity\nmh.Health.className = 'HEALTH'; // name of component on the ComponenDef object\nmh.Health.priority = 1; // general position in the engine's component array; highest updated first\n\nmh.Health.prototype = {\n\tconstructor: mh.Health,\n\n\tactivate: function() {\n\t\tthis._meter = this.max;\n\t\tthis.alive = true;\n\t\tthis.onActivate.dispatch(this._meter, this.entity);\n\t},\n\n\tchange: function(amount) {\n\t\tif (!this.alive) return 0;\n\n\t\tthis._meter += amount;\n\n\t\tif (this._meter <= 0) {\n\t\t\tthis._meter = 0;\n\t\t\tthis.alive = false;\n\n\t\t\tthis.onDeath.dispatch(amount, this.entity);\n\t\t}\n\t\telse {\n\t\t\tif (this._meter > this.max + this.overage) {\n\t\t\t\tthis._meter = this.max;\n\n\t\t\t\tthis.onFull.dispatch(amount);\n\t\t\t}\n\n\t\t\tif (amount < 0) this.onDamage.dispatch(amount);\n\t\t\telse this.onHeal.dispatch(amount);\n\t\t}\n\n\t\treturn this._meter;\n\t},\n\n\tdrain: function(amount) {\n\t\tif (!this.alive) return 0;\n\n\t\tif (this._meter > this.max) {\n\t\t\tthis._meter -= amount;\n\t\t\tif (this._meter <= this.max) {\n\t\t\t\tthis._meter = this.max;\n\n\t\t\t\tthis.onFull.dispatch(amount);\n\t\t\t}\n\t\t}\n\t\treturn this._meter;\n\t},\n\n\tdispose: function() {\n\t\t// remove signal callbacks\n\t\tthis.onDeath.dispose();\n\t\tthis.onDamage.dispose();\n\t\tthis.onHeal.dispose();\n\t\tthis.onFull.dispose();\n\n\t\t// null references\n\t\tthis.entity = null;\n\t\tthis.deathSignal = null;\n\t\tthis.onDamage = null;\n\t\tthis.onHeal = null;\n\t\tthis.onFull = null;\n\t}\n};\n","\n/*\n\tHandles lifecycle of gamepads.\n\t@author Corey Birnbaum http://coldconstructs.com/ @vonWolfehaus\n*/\nmh.GamepadController = function() {\n\tthis.controllers = [];\n\tthis.onConnect = new mh.Signal();\n\tthis.onDisconnect = new mh.Signal();\n\tthis.activeControllers = 0;\n\n\t// private\n\tthis._controllerStatus = [];\n\n\tfor (var i = 0; i < 4; i++) {\n\t\tthis.controllers[i] = new mh.XboxGamepad(i);\n\t\tthis._controllerStatus[i] = false;\n\t}\n\n\twindow.addEventListener('gamepadconnected', this._onConnect.bind(this), false);\n\twindow.addEventListener('gamepaddisconnected', this._onDisconnect.bind(this), false);\n};\n\nmh.GamepadController.prototype = {\n\tconstructor: mh.GamepadController,\n\n\tupdate: function() {\n\t\tvar i, ctrl;\n\t\tif (navigator.webkitGetGamepads) {\n\t\t\tthis._scan(); // very poorly designed, Mozilla... use events, not polling for this!\n\t\t}\n\t\tfor (i = 0; i < 4; i++) {\n\t\t\tctrl = this.controllers[i];\n\t\t\tif (ctrl.active) {\n\t\t\t\tctrl.update();\n\t\t\t}\n\t\t}\n\t},\n\n\tdispose: function() {\n\t\t// null references\n\t\tthis.controllers = null;\n\t\tthis.onConnect.dispose();\n\t\tthis.onDisconnect.dispose();\n\t\tthis.onConnect = null;\n\t\tthis.onDisconnect = null;\n\t\tthis._controllerStatus = null;\n\t},\n\n\t_addPad: function(gamepad) {\n\t\tvar ctrl = this.controllers[gamepad.index];\n\t\tctrl.register(gamepad);\n\t\tctrl.activate();\n\n\t\tthis.onConnect.dispatch(ctrl);\n\t\tthis.activeControllers++;\n\t\t// console.log('addPad');\n\t},\n\n\t_removePad: function(gamepad) {\n\t\tvar ctrl = gamepad.index ? this.controllers[gamepad.index] : this.controllers[gamepad];\n\t\tctrl.unregister();\n\n\t\tthis.onDisconnect.dispatch(ctrl);\n\t\tthis.activeControllers--;\n\t\t// console.log('removePad');\n\t},\n\n\t_onConnect: function(evt) {\n\t\tthis._addPad(evt.gamepad);\n\t},\n\n\t_onDisconnect: function(evt) {\n\t\tthis._removePad(evt.gamepad);\n\t},\n\n\t_scan: function() {\n\t\tvar i, gamepads = navigator.webkitGetGamepads();\n\t\tfor (i = 0; i < gamepads.length; i++) {\n\t\t\tif (gamepads[i]) {\n\t\t\t\tif (this._controllerStatus[i]) {\n\t\t\t\t\t// this is fucking pathetic, we should be getting live references!\n\t\t\t\t\tthis.controllers[i].setPad(gamepads[i]);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._addPad(gamepads[i]);\n\t\t\t\t\tthis._controllerStatus[i] = true;\n\t\t\t\t}\n\n\t\t\t}\n\t\t\telse if (!gamepads[i] && this._controllerStatus[i]) {\n\t\t\t\tthis._removePad(i);\n\t\t\t\tthis._controllerStatus[i] = false;\n\t\t\t}\n\t\t}\n\t}\n};\n","define('AABB3', function() {\n\nvar AABB3 = function(entity, settings) {\n\tsettings = settings || {};\n\tmh.Base.call(this); // always extend Base\n\n\t// attributes\n\tthis.foo = config.foo;\n\n\t// attribute override\n\tmh.util.overwrite(this, settings);\n\n\t// other properties\n\tthis.entity = entity;\n\n\t// prerequisite components\n\tthis.position = mh.kai.expect(entity, 'position', THREE.Vector3);\n};\n\n// required statics for component system\nAABB3.accessor = 'body'; // property name as it sits on an entity\nAABB3.className = 'AABB3'; // name of component on the mh.Component object\nAABB3.priority = 10; // general position in the engine's component array; updated in ascending order\nAABB3.post = false; // whether or not this component will have a postUpdate() called on it\n\nAABB3.prototype = {\n\tconstructor: AABB3,\n\n\tactivate: function() {\n\t\tthis.active = true;\n\t},\n\n\tdisable: function() {\n\t\tthis.active = false;\n\t},\n\n\tupdate: function() {\n\n\t},\n\n\tdispose: function() {\n\t\t// remove signal callbacks\n\n\t\t// null references\n\t\tthis.entity = null;\n\t\tthis.position = null;\n\t}\n};\n\nreturn AABB3;\n\n});\n","define('global', {\n\tboard: null,\n\tgrid: null,\n\tbroadphase: null,\n\tnextLevel: 0,\n\tComponents: null,\n});","(function() {\n\tvar engine = new mh.Engine();\n\tvar g = require('global');\n\n\tmh.kai.view = new vg.Scene({\n\t\telement: document.getElementById('stage'),\n\t\tcameraPosition: {x:0, y:150, z:150}\n\t}, true);\n\n\tg.Components = mh.kai.registerComponents([\n\t\tmh.THREECube,\n\t\tmh.StackFSM,\n\t\trequire('AABB3')\n\t]);\n\n\tvar firstState = 'Adventure';\n\tengine.state.add(firstState, require(firstState));\n\tengine.start(firstState);\n}());"],"sourceRoot":"/source/"}